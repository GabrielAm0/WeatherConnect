{"ast":null,"code":"export let createNanoEvents = () => ({\n  emit(event, ...args) {\n    for (let i = 0, callbacks = this.events[event] || [], length = callbacks.length; i < length; i++) {\n      callbacks[i](...args);\n    }\n  },\n  events: {},\n  on(event, cb) {\n    ;\n    (this.events[event] ||= []).push(cb);\n    return () => {\n      this.events[event] = this.events[event]?.filter(i => cb !== i);\n    };\n  }\n});","map":{"version":3,"names":["createNanoEvents","emit","event","args","i","callbacks","events","length","on","cb","push","filter"],"sources":["C:/Users/gabriel.custodio/Documents/GitHub/WeatherConnect/front/weather-connect-app/node_modules/nanoevents/index.js"],"sourcesContent":["export let createNanoEvents = () => ({\r\n  emit(event, ...args) {\r\n    for (\r\n      let i = 0,\r\n        callbacks = this.events[event] || [],\r\n        length = callbacks.length;\r\n      i < length;\r\n      i++\r\n    ) {\r\n      callbacks[i](...args)\r\n    }\r\n  },\r\n  events: {},\r\n  on(event, cb) {\r\n    ;(this.events[event] ||= []).push(cb)\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter(i => cb !== i)\r\n    }\r\n  }\r\n})\r\n"],"mappings":"AAAA,OAAO,IAAIA,gBAAgB,GAAGA,CAAA,MAAO;EACnCC,IAAIA,CAACC,KAAK,EAAE,GAAGC,IAAI,EAAE;IACnB,KACE,IAAIC,CAAC,GAAG,CAAC,EACPC,SAAS,GAAG,IAAI,CAACC,MAAM,CAACJ,KAAK,CAAC,IAAI,EAAE,EACpCK,MAAM,GAAGF,SAAS,CAACE,MAAM,EAC3BH,CAAC,GAAGG,MAAM,EACVH,CAAC,EAAE,EACH;MACAC,SAAS,CAACD,CAAC,CAAC,CAAC,GAAGD,IAAI,CAAC;IACvB;EACF,CAAC;EACDG,MAAM,EAAE,CAAC,CAAC;EACVE,EAAEA,CAACN,KAAK,EAAEO,EAAE,EAAE;IACZ;IAAC,CAAC,IAAI,CAACH,MAAM,CAACJ,KAAK,CAAC,KAAK,EAAE,EAAEQ,IAAI,CAACD,EAAE,CAAC;IACrC,OAAO,MAAM;MACX,IAAI,CAACH,MAAM,CAACJ,KAAK,CAAC,GAAG,IAAI,CAACI,MAAM,CAACJ,KAAK,CAAC,EAAES,MAAM,CAACP,CAAC,IAAIK,EAAE,KAAKL,CAAC,CAAC;IAChE,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}