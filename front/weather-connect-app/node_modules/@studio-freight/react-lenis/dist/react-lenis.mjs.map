{"version":3,"file":"react-lenis.mjs","sources":["../src/index.jsx"],"sourcesContent":["'use client'\r\n\r\nimport { useFrame } from '@studio-freight/hamo'\r\nimport Lenis from '@studio-freight/lenis'\r\nimport cn from 'clsx'\r\nimport PropTypes from 'prop-types' // ES6\r\nimport React, {\r\n  createContext,\r\n  forwardRef,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react'\r\nimport { create } from 'zustand'\r\n\r\nexport const LenisContext = createContext()\r\n\r\nconst useRoot = create(() => ({}))\r\n\r\nfunction useCurrentLenis() {\r\n  const local = useContext(LenisContext)\r\n  const root = useRoot()\r\n\r\n  return local ?? root\r\n}\r\n\r\n/**\r\n * @param {CallbackFunction} [callback] Callback to be called on scroll\r\n * @param {Array=} [deps=[]] Dependencies for callback\r\n * @param {number=} [priority=0] Priority of callback (lower priority callbacks are called first)\r\n *\r\n * @returns {LenisInstance} Lenis instance\r\n */\r\nexport function useLenis(callback, deps = [], priority = 0) {\r\n  const { lenis, addCallback, removeCallback } = useCurrentLenis()\r\n\r\n  useEffect(() => {\r\n    if (!callback || !addCallback || !removeCallback || !lenis) return\r\n\r\n    addCallback(callback, priority)\r\n    callback(lenis)\r\n\r\n    return () => {\r\n      removeCallback(callback)\r\n    }\r\n  }, [lenis, addCallback, removeCallback, priority, ...deps])\r\n\r\n  return lenis\r\n}\r\n\r\n/**\r\n * @param {boolean=} [root] Whether Lenis will be initialized on document.documentElement\r\n * @param {ReactLenisOptions} [options={}] Lenis options {@link ReactLenisOptions}\r\n * @param {boolean=} [autoRaf=true] Whether to call Lenis.raf automatically on every frame\r\n * @param {number=} [rafPriority=0] Priority of Lenis.raf call (lower priority callbacks are called first)\r\n * @param {string=} [className] Class name to be applied to the wrapper\r\n */\r\nconst ReactLenis = forwardRef(\r\n  (\r\n    {\r\n      children,\r\n      root = false,\r\n      options = {},\r\n      autoRaf = true,\r\n      rafPriority = 0,\r\n      className,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const wrapperRef = useRef()\r\n    const contentRef = useRef()\r\n\r\n    const [lenis, setLenis] = useState()\r\n\r\n    const callbacksRefs = useRef([])\r\n\r\n    const addCallback = useCallback((callback, priority) => {\r\n      callbacksRefs.current.push({ callback, priority })\r\n      callbacksRefs.current.sort((a, b) => a.priority - b.priority)\r\n    }, [])\r\n\r\n    const removeCallback = useCallback((callback) => {\r\n      callbacksRefs.current = callbacksRefs.current.filter(\r\n        (cb) => cb.callback !== callback\r\n      )\r\n    }, [])\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        wrapper: wrapperRef.current,\r\n        content: contentRef.current,\r\n        lenis,\r\n      }),\r\n      [lenis]\r\n    )\r\n\r\n    useEffect(() => {\r\n      const lenis = new Lenis({\r\n        ...options,\r\n        ...(!root && {\r\n          wrapper: wrapperRef.current,\r\n          content: contentRef.current,\r\n        }),\r\n      })\r\n\r\n      setLenis(lenis)\r\n\r\n      return () => {\r\n        lenis.destroy()\r\n        setLenis(undefined)\r\n      }\r\n    }, [root, JSON.stringify(options)])\r\n\r\n    useFrame((time) => {\r\n      if (autoRaf) {\r\n        lenis?.raf(time)\r\n      }\r\n    }, rafPriority)\r\n\r\n    useEffect(() => {\r\n      if (root && lenis) {\r\n        useRoot.setState({ lenis, addCallback, removeCallback })\r\n      }\r\n    }, [root, lenis, addCallback, removeCallback])\r\n\r\n    const onScroll = useCallback((e) => {\r\n      for (let i = 0; i < callbacksRefs.current.length; i++) {\r\n        callbacksRefs.current[i].callback(e)\r\n      }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      lenis?.on('scroll', onScroll)\r\n\r\n      return () => {\r\n        lenis?.off('scroll', onScroll)\r\n      }\r\n    }, [lenis, onScroll])\r\n\r\n    const onClassNameChange = useCallback(() => {\r\n      if (wrapperRef.current)\r\n        wrapperRef.current.className = cn(lenis?.className, className)\r\n    }, [lenis, className])\r\n\r\n    useEffect(() => {\r\n      onClassNameChange()\r\n\r\n      lenis?.on('className change', onClassNameChange)\r\n\r\n      return () => {\r\n        lenis?.off('className change', onClassNameChange)\r\n      }\r\n    }, [lenis, onClassNameChange])\r\n\r\n    return (\r\n      <LenisContext.Provider value={{ lenis, addCallback, removeCallback }}>\r\n        {root ? (\r\n          children\r\n        ) : (\r\n          <div\r\n            ref={wrapperRef}\r\n            className={cn(lenis?.className, className)}\r\n            {...props}\r\n          >\r\n            <div ref={contentRef}>{children}</div>\r\n          </div>\r\n        )}\r\n      </LenisContext.Provider>\r\n    )\r\n  }\r\n)\r\nReactLenis.displayName = 'ReactLenis'\r\n\r\nReactLenis.propTypes = {\r\n  children: PropTypes.node,\r\n  root: PropTypes.bool,\r\n  options: PropTypes.object,\r\n  autoRaf: PropTypes.bool,\r\n  rafPriority: PropTypes.number,\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport { ReactLenis as Lenis, ReactLenis }\r\nexport default ReactLenis\r\n\r\n/**\r\n * @callback EasingFunction\r\n * @param {number} rawValue\r\n * @returns {number} eased output value\r\n */\r\n\r\n/**\r\n * @callback CallbackFunction\r\n * @param {LenisInstance} instance\r\n */\r\n\r\n/**\r\n * @typedef {Object} CallbackEvents\r\n * @property {CallbackFunction[]} scroll scroll events\r\n */\r\n\r\n/**\r\n * @callback RAF\r\n * @param {number} time\r\n */\r\n\r\n/**\r\n * @typedef {Object} ScrollToParams\r\n * @property {number} [offset] equivalent to scroll-padding-top\r\n * @property {number} [lerp] animation interpolation rate\r\n * @property {number} [duration] animation duration (in seconds)\r\n * @property {EasingFunction} [easing] animation easing\r\n * @property {boolean} [immediate] ignore duration, easing and lerp\r\n * @property {boolean} [lock] whether or not to prevent the user from scrolling until the target is reached\r\n * @property {boolean} [force] reach target even if instance is stopped\r\n * @property {CallbackFunction} [onComplete] called when the target is reached\r\n */\r\n\r\n/**\r\n * @callback ScrollTo\r\n * @param {number|string|HTMLElement} target\r\n * @param {ScrollToParams} [options]\r\n */\r\n\r\n/**\r\n * @typedef {Object} ReactLenisOptions\r\n * @property {(HTMLElement|Window)} [wrapper=window] interpolation rate\r\n * @property {HTMLElement=} [content=document.documentElement]\r\n * @property {(HTMLElement|Window)} [wheelEventsTarget=wrapper]\r\n * @property {number=} [lerp=0.1] interpolation rate\r\n * @property {number=} [duration=1.2] scroll duration\r\n * @property {EasingFunction=} [easing=(t) => Math.min(1, 1.001 - Math.pow(2, -10 * t))] // easing function to apply to scroll values\r\n * @property {string=} [orientation='vertical'] scroll orientation\r\n * @property {string=} [gestureOrientation='vertical']\r\n * @property {boolean=} [smoothWheel=true]\r\n * @property {boolean=} [smoothTouch=false]\r\n * @property {boolean=} [syncTouch=false]\r\n * @property {number=} [syncTouchLerp=0.1]\r\n * @property {number=} [touchInertiaMultiplier=1]\r\n * @property {boolean=} [normalizeWheel=false]\r\n * @property {boolean=} [infinite=false] enable infinite scroll\r\n * @property {boolean=} [autoResize=true]\r\n */\r\n\r\n/**\r\n * @typedef {Object} Dimensions\r\n * @property {(HTMLElement|Window)} wrapper Wrapper lenis is applied to\r\n * @property {HTMLElement} content\r\n * @property {ResizeObserver} contentResizeObserver\r\n * @property {function():void} resize\r\n * @property {function():void} onContentResize\r\n * @property {function():void} onWrapperResize\r\n * @property {number} width viewport width\r\n * @property {number} height viewport height\r\n * @property {number} scrollWidth\r\n * @property {number} scrollHeight\r\n */\r\n\r\n/**\r\n * @typedef {Object} Emitter\r\n * @property {CallbackEvents} events\r\n */\r\n\r\n/**\r\n * @callback EventHandler\r\n * @param {string} id lenis instance event\r\n * @param {CallbackFunction} fn callback\r\n */\r\n\r\n/**\r\n * @typedef {Object} LenisInstance\r\n * @property {number} animatedScroll Current scroll value\r\n * @property {Dimensions} dimensions Dimensions instance\r\n * @property {number} direction scroll direction; 0: stopped, 1: scrolling up, -1: scrolling down\r\n * @property {Emitter} emitter Emitter instance\r\n * @property {ReactLenisOptions} options Instance options {@link ReactLenisOptions}\r\n * @property {number} targetScroll Target scroll value\r\n * @property {number} time Time elapsed since instance creation\r\n * @property {number} actualScroll Current scroll value registered by the browser\r\n * @property {number} velocity Current scroll velocity\r\n * @property {boolean} isHorizontal Whether or not the instance is horizontal\r\n * @property {boolean} isScrolling Whether or not the instance is being animated\r\n * @property {boolean} isSmooth Whether or not the instance is animated\r\n * @property {boolean} isStopped Whether or not the user should be able to scroll\r\n * @property {number} limit Maximum scroll value\r\n * @property {number} progress Scroll progress from 0 to 1\r\n * @property {HTMLElement} rootElement Element on which Lenis is instanced\r\n * @property {number} scroll Current scroll value (handles infinite scroll if activated)\r\n * @property {function():void} stop Pauses the scroll\r\n * @property {function():void} start Resumes the scroll\r\n * @property {function():void} resize Compute internal sizes, has to be used if autoResize option is false\r\n * @property {function():void} destroy Destroys the instance and removes all events\r\n * @property {EventHandler} on Lenis event listener\r\n * @property {ScrollTo} scrollTo Scroll to target\r\n * @property {RAF} raf Must be called every frame for internal usage\r\n */\r\n"],"names":["LenisContext","createContext","useRoot","create","useLenis","callback","deps","priority","lenis","addCallback","removeCallback","local","useContext","root","useCurrentLenis","useEffect","ReactLenis","forwardRef","children","options","autoRaf","rafPriority","className","props","ref","wrapperRef","useRef","contentRef","setLenis","useState","callbacksRefs","useCallback","current","push","sort","a","b","filter","cb","useImperativeHandle","wrapper","content","Lenis","destroy","undefined","JSON","stringify","useFrame","time","raf","setState","onScroll","e","i","length","on","off","onClassNameChange","cn","React","createElement","Provider","value","_extends","displayName","propTypes","PropTypes","node","bool","object","number","string"],"mappings":"oiBAkBaA,MAAAA,EAAeC,IAEtBC,EAAUC,GAAO,MAAS,KAgBzB,SAASC,EAASC,EAAUC,EAAO,GAAIC,EAAW,GACvD,MAAMC,MAAEA,EAAKC,YAAEA,EAAWC,eAAEA,GAf9B,WACE,MAAMC,EAAQC,EAAWZ,GACnBa,EAAOX,IAEb,OAAOS,GAASE,CAClB,CAUiDC,GAa/C,OAXAC,GAAU,KACR,GAAKV,GAAaI,GAAgBC,GAAmBF,EAKrD,OAHAC,EAAYJ,EAAUE,GACtBF,EAASG,GAEF,KACLE,EAAeL,EAAS,CACzB,GACA,CAACG,EAAOC,EAAaC,EAAgBH,KAAaD,IAE9CE,CACT,CASA,MAAMQ,EAAaC,GACjB,EAEIC,WACAL,QAAO,EACPM,UAAU,CAAE,EACZC,WAAU,EACVC,cAAc,EACdC,eACGC,GAELC,KAEA,MAAMC,EAAaC,IACbC,EAAaD,KAEZlB,EAAOoB,GAAYC,IAEpBC,EAAgBJ,EAAO,IAEvBjB,EAAcsB,GAAY,CAAC1B,EAAUE,KACzCuB,EAAcE,QAAQC,KAAK,CAAE5B,WAAUE,aACvCuB,EAAcE,QAAQE,MAAK,CAACC,EAAGC,IAAMD,EAAE5B,SAAW6B,EAAE7B,UAAS,GAC5D,IAEGG,EAAiBqB,GAAa1B,IAClCyB,EAAcE,QAAUF,EAAcE,QAAQK,QAC3CC,GAAOA,EAAGjC,WAAaA,GACzB,GACA,IAEHkC,EACEf,GACA,KAAO,CACLgB,QAASf,EAAWO,QACpBS,QAASd,EAAWK,QACpBxB,WAEF,CAACA,IAGHO,GAAU,KACR,MAAMP,EAAQ,IAAIkC,EAAM,IACnBvB,MACEN,GAAQ,CACX2B,QAASf,EAAWO,QACpBS,QAASd,EAAWK,WAMxB,OAFAJ,EAASpB,GAEF,KACLA,EAAMmC,UACNf,OAASgB,EAAU,CACpB,GACA,CAAC/B,EAAMgC,KAAKC,UAAU3B,KAEzB4B,GAAUC,IACJ5B,GACFZ,GAAOyC,IAAID,EACb,GACC3B,GAEHN,GAAU,KACJF,GAAQL,GACVN,EAAQgD,SAAS,CAAE1C,QAAOC,cAAaC,kBACzC,GACC,CAACG,EAAML,EAAOC,EAAaC,IAE9B,MAAMyC,EAAWpB,GAAaqB,IAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAcE,QAAQsB,OAAQD,IAChDvB,EAAcE,QAAQqB,GAAGhD,SAAS+C,EACpC,GACC,IAEHrC,GAAU,KACRP,GAAO+C,GAAG,SAAUJ,GAEb,KACL3C,GAAOgD,IAAI,SAAUL,EAAS,IAE/B,CAAC3C,EAAO2C,IAEX,MAAMM,EAAoB1B,GAAY,KAChCN,EAAWO,UACbP,EAAWO,QAAQV,UAAYoC,EAAGlD,GAAOc,UAAWA,GAAU,GAC/D,CAACd,EAAOc,IAYX,OAVAP,GAAU,KACR0C,IAEAjD,GAAO+C,GAAG,mBAAoBE,GAEvB,KACLjD,GAAOgD,IAAI,mBAAoBC,EAAkB,IAElD,CAACjD,EAAOiD,IAGTE,EAAAC,cAAC5D,EAAa6D,SAAQ,CAACC,MAAO,CAAEtD,QAAOC,cAAaC,mBACjDG,EACCK,EAEAyC,EAAAC,oBAAAG,EAAA,CACEvC,IAAKC,EACLH,UAAWoC,EAAGlD,GAAOc,UAAWA,IAC5BC,GAEJoC,EAAAC,cAAA,MAAA,CAAKpC,IAAKG,GAAaT,IAGL,IAI9BF,EAAWgD,YAAc,aAEzBhD,EAAWiD,UAAY,CACrB/C,SAAUgD,EAAUC,KACpBtD,KAAMqD,EAAUE,KAChBjD,QAAS+C,EAAUG,OACnBjD,QAAS8C,EAAUE,KACnB/C,YAAa6C,EAAUI,OACvBhD,UAAW4C,EAAUK"}